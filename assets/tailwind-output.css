/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  --white: 255 255 255;
  --almost-black: 1 1 1;
  --gray: 129 129 129;
  --gray-light: 200 200 200;
  --primary-copy: var(--almost-black);
  --secondary-copy: var(--gray);
  --alternative-copy: var(--white);
  --primary-bg: var(--white);
  --alternative-bg: var(--almost-black);
  --font-gotham: 'Gotham';
  --font-schabo: 'SCHABO';
  --tw-header-height: 5rem;
  /* 80px */
  background-color: rgb(var(--primary-bg) / 1);
  font-family: var(--font-gotham), sans-serif;
  color: rgb(var(--primary-copy) / 1);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media screen and (min-width: 990px) {
  :root {
    --tw-header-height: 3rem;
    /* 48px */
  }
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 480px) {
  .container {
    max-width: 480px;
  }
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 750px) {
  .container {
    max-width: 750px;
  }
}

@media (min-width: 990px) {
  .container {
    max-width: 990px;
  }
}

@media (min-width: 1440px) {
  .container {
    max-width: 1440px;
  }
}

#tw-wrapper :is(.fixed) {
  position: fixed;
}

#tw-wrapper :is(.absolute) {
  position: absolute;
}

#tw-wrapper :is(.relative) {
  position: relative;
}

#tw-wrapper :is(.sticky) {
  position: sticky;
}

#tw-wrapper :is(.bottom-0) {
  bottom: 0px;
}

#tw-wrapper :is(.right-0) {
  right: 0px;
}

#tw-wrapper :is(.isolate) {
  isolation: isolate;
}

#tw-wrapper :is(.z-10) {
  z-index: 10;
}

#tw-wrapper :is(.col-\[1\/-1\]) {
  grid-column: 1/-1;
}

#tw-wrapper :is(.col-\[1\/1\]) {
  grid-column: 1/1;
}

#tw-wrapper :is(.row-\[1\/1\]) {
  grid-row: 1/1;
}

#tw-wrapper :is(.row-start-2) {
  grid-row-start: 2;
}

#tw-wrapper :is(.m-0) {
  margin: 0px;
}

#tw-wrapper :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto;
}

#tw-wrapper :is(.mb-8) {
  margin-bottom: 2rem;
}

#tw-wrapper :is(.mt-0) {
  margin-top: 0px;
}

#tw-wrapper :is(.mt-12) {
  margin-top: 3rem;
}

#tw-wrapper :is(.mt-\[2px\]) {
  margin-top: 2px;
}

#tw-wrapper :is(.block) {
  display: block;
}

#tw-wrapper :is(.flex) {
  display: flex;
}

#tw-wrapper :is(.table) {
  display: table;
}

#tw-wrapper :is(.hidden) {
  display: none;
}

#tw-wrapper :is(.aspect-square) {
  aspect-ratio: 1 / 1;
}

#tw-wrapper :is(.h-4) {
  height: 1rem;
}

#tw-wrapper :is(.h-5) {
  height: 1.25rem;
}

#tw-wrapper :is(.h-\[17px\]) {
  height: 17px;
}

#tw-wrapper :is(.h-\[1px\]) {
  height: 1px;
}

#tw-wrapper :is(.h-fit) {
  height: -moz-fit-content;
  height: fit-content;
}

#tw-wrapper :is(.h-full) {
  height: 100%;
}

#tw-wrapper :is(.min-h-12) {
  min-height: 3rem;
}

#tw-wrapper :is(.min-h-\[var\(--tw-header-height\)\]) {
  min-height: var(--tw-header-height);
}

#tw-wrapper :is(.w-4) {
  width: 1rem;
}

#tw-wrapper :is(.w-5) {
  width: 1.25rem;
}

#tw-wrapper :is(.w-\[10\%\]) {
  width: 10%;
}

#tw-wrapper :is(.w-\[17px\]) {
  width: 17px;
}

#tw-wrapper :is(.w-\[1px\]) {
  width: 1px;
}

#tw-wrapper :is(.w-fit) {
  width: -moz-fit-content;
  width: fit-content;
}

#tw-wrapper :is(.w-full) {
  width: 100%;
}

#tw-wrapper :is(.w-screen) {
  width: 100vw;
}

#tw-wrapper :is(.min-w-\[unset\]) {
  min-width: unset;
}

#tw-wrapper :is(.max-w-40) {
  max-width: 10rem;
}

#tw-wrapper :is(.max-w-screen-sm) {
  max-width: 640px;
}

#tw-wrapper :is(.max-w-screen-xs) {
  max-width: 480px;
}

#tw-wrapper :is(.max-w-xs) {
  max-width: 20rem;
}

#tw-wrapper :is(.flex-1) {
  flex: 1 1 0%;
}

#tw-wrapper :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#tw-wrapper :is(.cursor-pointer) {
  cursor: pointer;
}

#tw-wrapper :is(.grid-cols-3) {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

#tw-wrapper :is(.grid-cols-\[20\%\2c 1fr\2c 1fr\2c 1fr\]) {
  grid-template-columns: 20% 1fr 1fr 1fr;
}

#tw-wrapper :is(.flex-col) {
  flex-direction: column;
}

#tw-wrapper :is(.flex-wrap) {
  flex-wrap: wrap;
}

#tw-wrapper :is(.items-end) {
  align-items: flex-end;
}

#tw-wrapper :is(.items-center) {
  align-items: center;
}

#tw-wrapper :is(.justify-end) {
  justify-content: flex-end;
}

#tw-wrapper :is(.justify-center) {
  justify-content: center;
}

#tw-wrapper :is(.justify-between) {
  justify-content: space-between;
}

#tw-wrapper :is(.gap-x-3) {
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

#tw-wrapper :is(.gap-x-4) {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

#tw-wrapper :is(.gap-y-0) {
  row-gap: 0px;
}

#tw-wrapper :is(.gap-y-2) {
  row-gap: 0.5rem;
}

#tw-wrapper :is(.truncate) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#tw-wrapper :is(.whitespace-nowrap) {
  white-space: nowrap;
}

#tw-wrapper :is(.border) {
  border-width: 1px;
}

#tw-wrapper :is(.border-b) {
  border-bottom-width: 1px;
}

#tw-wrapper :is(.border-t) {
  border-top-width: 1px;
}

#tw-wrapper :is(.border-black) {
  border-color: rgb(var(--almost-black) / 1);
}

#tw-wrapper :is(.border-black\/10) {
  border-color: rgb(var(--almost-black) / 0.1);
}

#tw-wrapper :is(.border-white\/10) {
  border-color: rgb(var(--white) / 0.1);
}

#tw-wrapper :is(.bg-alternative-bg) {
  background-color: rgb(var(--alternative-bg) / 1);
}

#tw-wrapper :is(.bg-black) {
  background-color: rgb(var(--almost-black) / 1);
}

#tw-wrapper :is(.bg-primary-bg) {
  background-color: rgb(var(--primary-bg) / 1);
}

#tw-wrapper :is(.bg-\[var\(--color-button\)\]) {
  background-color: var(--color-button);
}

#tw-wrapper :is(.p-0) {
  padding: 0px;
}

#tw-wrapper :is(.p-2) {
  padding: 0.5rem;
}

#tw-wrapper :is(.p-4) {
  padding: 1rem;
}

#tw-wrapper :is(.p-\[10px\]) {
  padding: 10px;
}

#tw-wrapper :is(.p-\[20px\]) {
  padding: 20px;
}

#tw-wrapper :is(.px-0) {
  padding-left: 0px;
  padding-right: 0px;
}

#tw-wrapper :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

#tw-wrapper :is(.px-\[10\%\]) {
  padding-left: 10%;
  padding-right: 10%;
}

#tw-wrapper :is(.px-\[20px\]) {
  padding-left: 20px;
  padding-right: 20px;
}

#tw-wrapper :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

#tw-wrapper :is(.py-5) {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

#tw-wrapper :is(.pb-0) {
  padding-bottom: 0px;
}

#tw-wrapper :is(.pb-2) {
  padding-bottom: 0.5rem;
}

#tw-wrapper :is(.pb-24) {
  padding-bottom: 6rem;
}

#tw-wrapper :is(.pb-4) {
  padding-bottom: 1rem;
}

#tw-wrapper :is(.pb-8) {
  padding-bottom: 2rem;
}

#tw-wrapper :is(.pb-80) {
  padding-bottom: 20rem;
}

#tw-wrapper :is(.pl-0) {
  padding-left: 0px;
}

#tw-wrapper :is(.pl-5) {
  padding-left: 1.25rem;
}

#tw-wrapper :is(.pr-\[20px\]) {
  padding-right: 20px;
}

#tw-wrapper :is(.pt-0) {
  padding-top: 0px;
}

#tw-wrapper :is(.pt-4) {
  padding-top: 1rem;
}

#tw-wrapper :is(.pt-8) {
  padding-top: 2rem;
}

#tw-wrapper :is(.pt-\[2px\]) {
  padding-top: 2px;
}

#tw-wrapper :is(.pt-\[var\(--page-pt\)\]) {
  padding-top: var(--page-pt);
}

#tw-wrapper :is(.text-center) {
  text-align: center;
}

#tw-wrapper :is(.text-base) {
  font-size: 1rem;
  line-height: 120%;
}

#tw-wrapper :is(.text-lg) {
  font-size: 1.75rem;
  line-height: 105%;
}

#tw-wrapper :is(.text-sm) {
  font-size: 0.75rem;
  line-height: 120%;
}

#tw-wrapper :is(.text-xs) {
  font-size: 0.625rem;
  line-height: 120%;
  letter-spacing: 0.02em;
}

#tw-wrapper :is(.uppercase) {
  text-transform: uppercase;
}

#tw-wrapper :is(.capitalize) {
  text-transform: capitalize;
}

#tw-wrapper :is(.italic) {
  font-style: italic;
}

#tw-wrapper :is(.text-alternative-copy) {
  color: rgb(var(--alternative-copy) / 1);
}

#tw-wrapper :is(.text-white) {
  color: rgb(var(--white) / 1);
}

#tw-wrapper :is(.underline) {
  text-decoration-line: underline;
}

#tw-wrapper :is(.shadow) {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#tw-wrapper :is(.outline) {
  outline-style: solid;
}

#tw-wrapper :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

#tw-wrapper :is(.duration-150) {
  transition-duration: 150ms;
}

#tw-wrapper  :is(h1),:is(#tw-wrapper :is(h2)),:is(#tw-wrapper :is(h3)),:is(#tw-wrapper :is(h4)),:is(#tw-wrapper :is(h5)),:is(#tw-wrapper :is(h6)),:is(#tw-wrapper :is(p)),:is(#tw-wrapper :is(span)),:is(#tw-wrapper :is(div)),:is(#tw-wrapper :is(input)),:is(#tw-wrapper :is(button)),:is(#tw-wrapper :is(textarea)),:is(#tw-wrapper :is(label)),:is(#tw-wrapper :is(summary)),:is(#tw-wrapper :is(section)),:is(#tw-wrapper :is(article)),:is(#tw-wrapper :is(aside)),:is(#tw-wrapper :is(footer)),:is(#tw-wrapper :is(header)),:is(#tw-wrapper :is(nav)),:is(#tw-wrapper :is(main)),:is(#tw-wrapper :is(ul)),:is(#tw-wrapper :is(ol)),:is(#tw-wrapper :is(li)),:is(#tw-wrapper :is(dl)),:is(#tw-wrapper :is(dt)),:is(#tw-wrapper :is(dd)),:is(#tw-wrapper :is(blockquote)),:is(#tw-wrapper :is(code)),:is(#tw-wrapper :is(pre)),:is(#tw-wrapper :is(table)),:is(#tw-wrapper :is(th)),:is(#tw-wrapper :is(td)),:is(#tw-wrapper :is(form)),:is(#tw-wrapper :is(fieldset)),:is(#tw-wrapper :is(legend)),:is(#tw-wrapper :is(figure)),:is(#tw-wrapper :is(figcaption)),:is(#tw-wrapper :is(hr)) {
  letter-spacing: -0.05rem;
}

#tw-wrapper  :is(h1) {
  margin-bottom: var(--h1-mb);
  font-size: 2.625rem;
  line-height: 104%;
}

#tw-wrapper  :is(h2),:is( #tw-wrapper :is(h3)) {
  font-size: 1.75rem;
  line-height: 105%;
}

#tw-wrapper :is(.tw-grid) {
  display: grid;
}

#tw-wrapper  :is(.tw-hidden) {
  display: none;
}

#tw-wrapper  :is(.page-width) {
  margin-left: 0px;
  margin-right: 0px;
  max-width: 1440px;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

@media (min-width: 990px) {
  #tw-wrapper  :is(.page-width) {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
}

@media (min-width: 1440px) {
  #tw-wrapper  :is(.page-width) {
    margin-left: auto;
    margin-right: auto;
  }
}

/* card grid */

#tw-wrapper  :is(.grid.contains-card) {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  row-gap: 2rem;
  display: grid;
}

@media (min-width: 480px) {
  #tw-wrapper  :is(.grid.contains-card) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 990px) {
  #tw-wrapper  :is(.grid.contains-card) {
    display: flex;
  }
}

#tw-wrapper  :is(.card__heading) {
  font-size: 1.75rem;
  line-height: 105%;
}

#tw-wrapper  :is(.card__information) {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

#tw-wrapper  :is(.icon) {
  max-height: 100%;
  max-width: 100%;
}

/* section gap */

#tw-wrapper  :is(#MainContent section:not(:first-child, :nth-child(2))) {
  margin-top: 3rem;
}

/* contact form */

#tw-wrapper  :is(form#ContactForm) {
  max-width: 750px;
}

/* input */

#tw-wrapper  :is(.field__label),:is(
  #tw-wrapper :is(.customer .field label)) {
  font-size: 1rem;
  line-height: 120%;
  line-height: 2.5rem;
  color: rgb(var(--almost-black) / 1);
}

#tw-wrapper  :is(.field__input),:is( #tw-wrapper :is(.customer .field input)) {
  height: 2.5rem;
  min-height: unset;
  padding-top: 0px;
  padding-bottom: 0px;
}

#tw-wrapper  :is(.field__label),:is(
  #tw-wrapper :is(.customer .field label)) {
  top: 0px;
}

#tw-wrapper :is(.field__input:focus~.field__label),
  #tw-wrapper :is(.field__input:not(:placeholder-shown)~.field__label),
  #tw-wrapper :is(.field__input:-webkit-autofill~.field__label),
  #tw-wrapper :is(.customer .field input:focus~label),
  #tw-wrapper :is(.customer .field input:not(:placeholder-shown)~label),
  #tw-wrapper :is(.customer .field input:-webkit-autofill~label) {
  font-size: 0.8rem;
  top: calc(var(--inputs-border-width) - 0.5rem);
  left: calc(var(--inputs-border-width) + 2rem);
}

#tw-wrapper  :is(.field__input:focus~.field__label),:is(
  #tw-wrapper :is(.field__input:not(:placeholder-shown)~.field__label)),:is(
  #tw-wrapper :is(.field__input:-webkit-autofill~.field__label)),:is(
  #tw-wrapper :is(.customer .field input:focus~label)),:is(
  #tw-wrapper :is(.customer .field input:not(:placeholder-shown)~label)),:is(
  #tw-wrapper :is(.customer .field input:-webkit-autofill~label)) {
  font-size: 0.75rem;
  line-height: 120%;
  line-height: 2rem;
}

/* button */

#tw-wrapper  :is(button),:is( #tw-wrapper :is(.button)),:is( #tw-wrapper :is(.shopify-payment-button)),:is( #tw-wrapper :is(.shopify-payment-button__button)) {
  height: 2.5rem;
  min-height: unset;
  padding-top: 0px;
  padding-bottom: 0px;
  font-size: 1rem;
  line-height: 120%;
}

/* select input */

#tw-wrapper :is(.disclosure__button.localization-form__select) {
  padding: calc(2rem + var(--inputs-border-width));
  height: 2.5rem;
  min-height: unset;
  padding-top: 0px;
  padding-bottom: 0px;
  font-size: 1rem;
  line-height: 120%;
}

#tw-wrapper  :is(.select__select),:is( #tw-wrapper :is(.product-form__submit)) {
  height: 2.5rem;
  min-height: unset;
}

#tw-wrapper  :is(.disclosure__button.localization-form__select span) {
  padding-right: 1.5rem;
  font-size: 1rem;
  line-height: 120%;
}

#tw-wrapper  :is(.disclosure .localization-form__select),:is(
  #tw-wrapper :is(.disclosure__link)),:is(
  #tw-wrapper :is(.link .customer a)) {
  font-size: 1rem;
  line-height: 120%;
}

#tw-wrapper  :is(.product-form__submit) {
  background-color: rgb(var(--almost-black) / 1);
  color: rgb(var(--white) / 1);
}

/* newsletter */

#tw-wrapper  :is(.newsletter-form__field-wrapper) {
  margin-left: auto;
  margin-right: auto;
}

@media (min-width: 480px) {
  #tw-wrapper  :is(.newsletter-form__field-wrapper) {
    max-width: 20rem;
  }
}

#tw-wrapper  :is(.newsletter-form__field-wrapper input) {
  height: 2.5rem;
  min-height: unset;
  padding-top: 0px;
  padding-bottom: 0px;
}

/* fixed layout for the Header Search Module */

#tw-wrapper  :is(.header__search > details[open='true']) {
  position: fixed;
  top: 0px;
  left: 0px;
  z-index: 10;
  width: 100vw;
}

#tw-wrapper   :is(.header__search > details[open='true'] > summary) {
  display: none;
}

#tw-wrapper  :is(.header__search > details > .search-modal) {
  position: relative;
}

#tw-wrapper  :is(.header__search > details .search-modal__content) {
  padding: 2rem;
}

#tw-wrapper  :is(.header__search > details .search-modal__content .search-modal__close-button) {
  position: relative;
  left: 0px;
  width: -moz-fit-content;
  width: fit-content;
  padding-left: 2.25rem;
}

#tw-wrapper  :is(.header__search > details .search-modal__form) {
  max-width: unset;
}

#tw-wrapper  :is(.header__search > details > .search-modal input[type="search"]) {
  border-style: none;
}

#tw-wrapper  :is(.header__icon--menu[aria-expanded='true'])::before {
  position: fixed;
  left: 0px;
  top: 0px;
  z-index: -1;
  height: 100vh;
  width: 100vw;
}

/* cart */

@media (min-width: 750px) {
  #tw-wrapper  :is(.cart__ctas) {
    justify-content: flex-end;
  }
}

#tw-wrapper  :is(.cart__ctas > button) {
  min-width: unset;
  max-width: 20rem;
}

#tw-wrapper  :is(.product-form__error-message),:is( #tw-wrapper :is(.cart-item__error *)),:is( #tw-wrapper :is(.error-message)) {
  margin-top: auto;
  margin-bottom: auto;
  font-size: 0.75rem;
  line-height: 120%;
}

@media (min-width: 480px) {
  #tw-wrapper  :is(.cart__dynamic-checkout-buttons) {
    max-width: 20rem;
  }
}

@media (min-width: 750px) {
  #tw-wrapper  :is(.cart__dynamic-checkout-buttons) {
    margin-right: 0px;
  }
}

#tw-wrapper  :is(.product-form__buttons > button),:is( #tw-wrapper :is(.cart__checkout-button button)) {
  height: 2.5rem;
  min-height: unset;
  width: 100%;
}

#tw-wrapper  :is(.cart-item__details *) {
  font-size: 0.75rem;
  line-height: 120%;
}

@media (min-width: 640px) {
  #tw-wrapper  :is(.cart-item__details *) {
    font-size: 1rem;
    line-height: 120%;
  }
}

#tw-wrapper  :is(.product-form__buttons .shopify-payment-button__more-options) {
  margin-top: 1rem;
  text-align: left;
  font-size: 0.75rem;
  line-height: 120%;
}

#tw-wrapper  :is(.product-form__input *) {
  font-size: 0.75rem;
  line-height: 120%;
}

#tw-wrapper  :is(.price),:is( #tw-wrapper :is(.price-item)) {
  font-size: 1rem;
  line-height: 120%;
  letter-spacing: -0.05em;
}

@media (min-width: 480px) {
  #tw-wrapper  :is(.product-form *[role="button"]),:is( #tw-wrapper :is(.product-form button)),:is( #tw-wrapper :is(.product-form__input)) {
    max-width: 20rem;
  }
}

#tw-wrapper  :is(.product__description) {
  margin-top: 4rem;
}

#tw-wrapper  :is(.price),:is( #tw-wrapper :is(.price--large)),:is( #tw-wrapper :is(.price--regular)) {
  display: flex;
  align-items: center;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

#tw-wrapper :is(.price__regular .price-item)::before,
  #tw-wrapper :is(.price__sale .price-item--sale)::before,
  #tw-wrapper :is(.cart-item__details .price)::before {
  content: '⊙';
}

#tw-wrapper  :is(.price__regular .price-item)::before,:is(
  #tw-wrapper :is(.price__sale .price-item--sale))::before {
  margin-top: -0.1rem;
  padding-right: 0.2rem;
  font-size: 1.25rem;
}

#tw-wrapper  :is(.card__heading .icon-wrap) {
  display: inline-block;
}

#tw-wrapper  :is(.cart-count-bubble) {
  position: absolute;
  top: 0.75rem;
  left: 0.5rem;
  height: 1rem;
  width: 1rem;
  --tw-bg-opacity: 1;
  background-color: rgb(243 243 243 / var(--tw-bg-opacity));
  font-size: 0.625rem;
  line-height: 120%;
  letter-spacing: 0.02em;
}

#tw-wrapper  :is(.cart-notification-wrapper *) {
  font-size: 1rem;
  line-height: 120%;
}

#tw-wrapper  :is(quantity-input.quantity),:is( #tw-wrapper :is(quantity-input.quantity > *)) {
  height: 2.5rem;
  min-height: unset;
  width: 100%;
  min-width: unset;
  flex: 1 1 0%;
  font-size: 1rem;
  line-height: 120%;
}

#tw-wrapper :is(quantity-input.quantity), #tw-wrapper :is(quantity-input.quantity > *) {
  font-weight: normal;
}

#tw-wrapper  :is(.price-per-item__container),:is(#tw-wrapper :is(quantity-input.quantity)) {
  position: relative;
  max-width: 8rem;
}

#tw-wrapper  :is(quantity-input.quantity .icon) {
  height: 0.5rem;
  width: 0.5rem;
}

/* faq */

#tw-wrapper   :is(.faq-item .reveal-answer ~ .faq-answer) {
  display: none;
}

#tw-wrapper  :is(.faq-item .reveal-answer:checked ~ .faq-answer) {
  display: block;
}

#tw-wrapper  :is(.faq-item .reveal-answer:checked ~ label .expand-icon-vertical-line) {
  --tw-translate-y: 0.25rem;
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#tw-wrapper  :is(.faq-item a) {
  text-decoration-line: underline;
}

@media (min-width: 480px) {
  #tw-wrapper :is(.xs\:row-start-2) {
    grid-row-start: 2;
  }

  #tw-wrapper :is(.xs\:min-w-14) {
    min-width: 3.5rem;
  }
}

@media (min-width: 640px) {
  #tw-wrapper :is(.sm\:col-\[2\/-1\]) {
    grid-column: 2/-1;
  }

  #tw-wrapper :is(.sm\:row-\[1\/-1\]) {
    grid-row: 1/-1;
  }

  #tw-wrapper :is(.sm\:w-fit) {
    width: -moz-fit-content;
    width: fit-content;
  }

  #tw-wrapper :is(.sm\:flex-nowrap) {
    flex-wrap: nowrap;
  }

  #tw-wrapper :is(.sm\:justify-end) {
    justify-content: flex-end;
  }

  .sm\:\[grid-template\:repeat\(2\2c auto\)_\/_repeat\(4\2c 1fr\)\] {
    grid-template: repeat(2,auto) / repeat(4,1fr);
  }
}

@media (min-width: 750px) {
  #tw-wrapper :is(.md\:min-w-24) {
    min-width: 6rem;
  }

  #tw-wrapper :is(.md\:pl-2) {
    padding-left: 0.5rem;
  }
}

@media (min-width: 990px) {
  #tw-wrapper :is(.lg\:order-2) {
    order: 2;
  }

  #tw-wrapper :is(.lg\:mb-10) {
    margin-bottom: 2.5rem;
  }

  #tw-wrapper :is(.lg\:block) {
    display: block;
  }

  #tw-wrapper :is(.lg\:inline) {
    display: inline;
  }

  #tw-wrapper :is(.lg\:flex) {
    display: flex;
  }

  #tw-wrapper :is(.lg\:flex-none) {
    flex: none;
  }

  #tw-wrapper :is(.lg\:grid-cols-\[1fr\2c 50px\2c 50px\]) {
    grid-template-columns: 1fr 50px 50px;
  }

  #tw-wrapper :is(.lg\:flex-wrap) {
    flex-wrap: wrap;
  }

  #tw-wrapper :is(.lg\:items-center) {
    align-items: center;
  }

  #tw-wrapper :is(.lg\:justify-start) {
    justify-content: flex-start;
  }

  #tw-wrapper :is(.lg\:py-0) {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  #tw-wrapper :is(.lg\:pt-0) {
    padding-top: 0px;
  }

  #tw-wrapper :is(.lg\:pt-\[var\(--page-pt-lg\)\]) {
    padding-top: var(--page-pt-lg);
  }
}

@media(min-width:400px) {
  #tw-wrapper :is(.\[\@media\(min-width\:400px\)\]\:w-fit) {
    width: -moz-fit-content;
    width: fit-content;
  }

  #tw-wrapper :is(.\[\@media\(min-width\:400px\)\]\:rounded-\[20px_0_0_20px\]) {
    border-radius: 20px 0 0 20px;
  }
}